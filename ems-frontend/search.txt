const [selectedColumn, setSelectedColumn] = useState("");
useEffect(() => {
    if (searchText === "") {
      setFilteredEmployees(employees);
    } else {
      const lowercasedText = searchText.toLowerCase();
      const filtered = employees.filter((employee) => {
        if (selectedColumn === "") {
          return Object.values(employee).some((value) =>
            String(value).toLowerCase().includes(lowercasedText)
          );
        } else {
          return String(employee[selectedColumn])
            .toLowerCase()
            .includes(lowercasedText);
        }
      });
      setFilteredEmployees(filtered);
    }
  }, [searchText, employees, selectedColumn]);

<select
            value={selectedColumn}
            onChange={(e) => setSelectedColumn(e.target.value)}
          >
            <option value="">All Columns</option>
            {columns.map((column, index) => (
              <option
                key={index}
                value={column.selector?.toString().split(".").pop()}
              >
                {column.name}
              </option>
            ))}
          </select>